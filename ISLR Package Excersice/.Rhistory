knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
x<-sample(1:1000,100,replace = T)
y<-x*2+sample(1:1000,100,replace = T)
length(x)
length(y)
slm<-lm(y~x+0)
slm1<-lm(x~y+0)
summary(slm)
summary(slm1)
x<-100:200
x<-x^2
y<-200:100
y<-y^2
slm2<-lm(x~y+0)
slm3<-lm(y~x+0)
summary(slm2)
summary(slm3)
knitr::opts_chunk$set(echo = TRUE)
plot(autolm,col="darkgreen")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
auto<-data.frame(Auto)
head(auto)
autolm<-lm(mpg~horsepower,data=auto)
summary(autolm)
predict(autolm,data.frame(horsepower=98),interval="confidence")
predict(autolm,data.frame(horsepower=98),interval="prediction")
plot(auto$horsepower,auto$mpg,main="Plot using adbline() display the least squares regression line",xlab="Horsepower",ylab = "mpg",col="darkorange")
abline(autolm,col="darkblue")
plot(autolm,col="darkgreen")
knitr::opts_chunk$set(echo = TRUE)
carseats<-data.frame(Carseats)
head(carseats)
str(carseats)
summary(carseats)
set.seed(1)
sd<-sample(1:nrow(carseats), round(nrow(carseats)/2))
train<-carseats[sd,]
test<-carseats[-sd,]
ctree<-tree(Sales~.,data = train)
ctree<-tree(Sales~.,data = train)
require(randomForest)
library(randomForest)
ctree<-tree(Sales~.,data = train)
require(tree)
library(tree)
ctree<-tree(Sales~.,data = train)
par(mfrow=c(1,1),bg="lightyellow")
plot(ctree,col="red",lwd=2)
text(ctree, pretty=0)
summary(ctree)
TESTMSE<-function(x) {
h=x
predictvalues<-predict(h,newdata=test)
mean((predictvalues-test$Sales)^2)
}
TESTMSE(ctree)
set.seed(5)
cv<-cv.tree(ctree)
par(mfrow=c(1,2),bg="lightyellow")
plot(cv$size,cv$dev,type="b",col="darkred",lwd=2)
plot(cv$k,cv$dev,type="b",col="darkgreen",lwd=2)
set.seed(1)
pcv<-prune.tree(ctree,best = 17)
par(mfrow=c(1,1),bg="lightyellow")
plot(pcv,col="red",lwd=2)
text(pcv,pretty=0)
TESTMSE(pcv)
bc<-randomForest(Sales~.,data=train,mtry=10,importance=T)
TESTMSE(bc)
bc$importance
set.seed(2)
mtrail<- function(x){
h=x
carrftree<-randomForest(Sales~.,data=train,mtry=h,importance=T)
TESTMSE(carrftree)
}
for (i in 1:10){
mtrail(i)
print(mtrail(i))
}
carrftree<-randomForest(Sales~.,data=train,mtry=9,importance=T)
carrftree$importance
par(mfrow=c(1,1),bg="lightyellow")
varImpPlot(carrftree,col="red",lwd=2)
require(tree)
library(tree)
require(tree)
library(tree)
ctree<-tree(Sales~.,data = train)
par(mfrow=c(1,1),bg="lightyellow")
plot(ctree,col="red",lwd=2)
text(ctree, pretty=0)
summary(ctree)
knitr::opts_chunk$set(echo = TRUE)
require(MASS)
require(tree)
require(ISLR)
require(randomForest)
library(MASS)
library(tree)
library(ISLR)
library(randomForest)
boston<-data.frame(Boston)
head(boston)
str(boston)
summary(boston)
require(MASS)
require(tree)
require(ISLR)
require(randomForest)
library(MASS)
library(tree)
library(ISLR)
library(randomForest)
carseats<-data.frame(Carseats)
head(carseats)
str(carseats)
summary(carseats)
set.seed(1)
sd<-sample(1:nrow(carseats), round(nrow(carseats)/2))
train<-carseats[sd,]
test<-carseats[-sd,]
knitr::opts_chunk$set(echo = TRUE)
require(MASS)
require(tree)
require(ISLR)
require(randomForest)
library(MASS)
library(tree)
library(ISLR)
library(randomForest)
carseats<-data.frame(Carseats)
head(carseats)
str(carseats)
summary(carseats)
set.seed(1)
sd<-sample(1:nrow(carseats), round(nrow(carseats)/2))
train<-carseats[sd,]
test<-carseats[-sd,]
knitr::opts_chunk$set(echo = TRUE)
require(MASS)
require(tree)
require(ISLR)
require(randomForest)
library(MASS)
library(tree)
library(ISLR)
library(randomForest)
boston<-data.frame(Boston)
head(boston)
str(boston)
summary(boston)
set.seed(1)
sd<-sample(1:nrow(boston), round(nrow(boston)/2))
train.x<-boston[sd,-14]
test.x<-boston[-sd,-14]
train.y<-boston[sd,14]
test.y<-boston[-sd,14]
mtry1<-randomForest(train.x,train.y,test.x,test.y,mtry = round(ncol(boston)-1),ntree = 500)
mtry2<-randomForest(train.x,train.y,test.x,test.y,mtry = round(ncol(boston)/2),ntree = 500)
mtry3<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 500)
mtry4<-randomForest(train.x,train.y,test.x,test.y,mtry = round(ncol(boston)/6),ntree = 500)
par(mfrow=c(1,1),bg="lightyellow")
plot(1:500,mtry1$test$mse,col="darkorange",type = "l",lwd=2,main="Test MSE vs Number of trees ",ylim = c(15,60),xlab = "No.of Trees",ylab = "Test MSE")
lines(1:500,mtry2$test$mse,col="darkgreen",type = "l",lwd=2)
lines(1:500,mtry3$test$mse,col="darkblue",type = "l",lwd=2)
lines(1:500,mtry4$test$mse,col="darkred",type = "l",lwd=2)
legend("topright",c("m=p","m=p/2","m=sqrt(p)","m=p/6"),col=c("darkorange","darkgreen","darkblue","darkred"),cex = 1,lty = 1,bty = "o")
ntree1<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 100)
ntree2<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 200)
ntree3<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 300)
ntree4<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 400)
ntree5<-randomForest(train.x,train.y,test.x,test.y,mtry = round(sqrt(ncol(boston))),ntree = 20)
par(mfrow=c(1,1),bg="lightyellow")
plot(1:400,ntree4$test$mse,col="orange",type = "l",lwd=2,main="Test MSE vs Number of trees with m=Sqrt(p)",ylim = c(15,50),xlab = "No.of Trees",ylab = "Test MSE")
lines(1:300,ntree3$test$mse,col="green",type = "l",lwd=2)
lines(1:200,ntree2$test$mse,col="blue",type = "l",lwd=2)
lines(1:100,ntree1$test$mse,col="red",type = "l",lwd=2)
lines(1:20,ntree5$test$mse,col="pink",type = "l",lwd=2)
legend("topright",c("ntree = 400","ntree = 300","ntree = 200","ntree = 100","ntree=20"),col=c("orange","green","blue","red","pink"),cex = 1,lty = 1,bty = "o")
knitr::opts_chunk$set(echo = TRUE)
tinytex::install_tinytex()
library(tinytex)
require(ggplot2)
library(ggplot2)
College<-read.csv("College.csv")
head(College,10)
head(rownames(College),10)
rownames(College)<-College[,1]
fix(College)
head(College)
College<-College[,-1]
fix(College)
summary(College)
pairs(College[,1:10])
boxplot(College$Outstate~College$Private,ylab = "Outstate",xlab = "Private")
title("Outstate vs Private")
Elite<-rep("No",length(College$Private))
Elite[College$Top10perc >50]=" Yes"
typeof(Elite)
Elite<-as.factor(Elite)
College<-data.frame(Elite,College)
summary(College)
boxplot(College$Outstate~College$Elite,ylab = "Outstate",xlab = "Elite")
title("Outstate vs Elite")
par(mfrow= c(2,2))
hist(College$Apps)
hist(College$Accept)
hist(College$Enroll)
hist(College$Top10perc)
hist(College$Top25perc)
hist(College$F.Undergrad)
hist(College$Outstate)
hist(College$Room.Board)
hist(College$Books)
library(ggplot2)
collegeplot1=function(x){
h=x
ggplot(College, aes(log(h), fill = Private))+geom_density()+ggtitle(paste(names(h)))
}
par(mfrow= c(2,2))
collegeplot1(College$Accept)
collegeplot1(College$Top10perc)
collegeplot1(College$Top25perc)
collegeplot1(College$Apps)
collegeplot1=function(x){
h=x
ggplot(College, aes(log(h), fill = Private))+geom_density()+ggtitle(paste(names(h)))
}
par(mfrow= c(2,2))
collegeplot1(College$Accept)
collegeplot1(College$Top10perc)
collegeplot1(College$Top25perc)
collegeplot1(College$Apps)
collegeplot2=function(x){
h=x
ggplot(College, aes(log(h), fill = Private))+geom_density()+ggtitle(paste(names(h)))
}
par(mfrow= c(2,2))
collegeplot2(College$Books)
collegeplot2(College$Expend)
collegeplot2(College$Personal)
collegeplot2(College$Room.Board )
detach("package:tinytex", unload = TRUE)
library(tinytex)
tinytex::install_tinytex()
detach("package:tinytex", unload = TRUE)
library(tinytex)
install.packages("tinytex")
library(tinytex)
knitr::opts_chunk$set(echo = TRUE)
